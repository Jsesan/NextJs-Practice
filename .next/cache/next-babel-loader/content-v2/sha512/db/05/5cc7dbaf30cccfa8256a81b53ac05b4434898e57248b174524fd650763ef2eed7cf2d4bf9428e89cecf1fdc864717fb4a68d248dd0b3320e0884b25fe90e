{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/juansesan/Desktop/dev/Frontend-projects/17-NextJS-Project/pages/[meetupId]/index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetail = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"https://www.reportur.com/wp-content/uploads/2020/01/bs-as-550x367.jpg\",\n    title: \"First Meetup\",\n    address: \"BS AS, Arg <3\",\n    description: \"the city\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://user:An7YcGYxAqSQrzwj@cluster0.t2dcl.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = context => {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://www.reportur.com/wp-content/uploads/2020/01/bs-as-550x367.jpg\",\n        title: \"First Meetup\",\n        address: \"BS AS, Arg <3\",\n        description: \"the city\"\n      }\n    }\n  };\n};\nexport default MeetupDetail;","map":{"version":3,"sources":["/Users/juansesan/Desktop/dev/Frontend-projects/17-NextJS-Project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupDetail","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,uEADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,eAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAUA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,oGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAlBM;AAoBP,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,uEAFQ;AAGVC,QAAAA,KAAK,EAAE,cAHG;AAIVC,QAAAA,OAAO,EAAE,eAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD,CAfM;AAgBP,eAAe5B,YAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\nconst MeetupDetail = () => {\n  return (\n    <MeetupDetails\n      image=\"https://www.reportur.com/wp-content/uploads/2020/01/bs-as-550x367.jpg\"\n      title=\"First Meetup\"\n      address=\"BS AS, Arg <3\"\n      description=\"the city\"\n    />\n  );\n};\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://user:An7YcGYxAqSQrzwj@cluster0.t2dcl.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = (context) => {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://www.reportur.com/wp-content/uploads/2020/01/bs-as-550x367.jpg\",\n        title: \"First Meetup\",\n        address: \"BS AS, Arg <3\",\n        description: \"the city\",\n      },\n    },\n  };\n};\nexport default MeetupDetail;\n"]},"metadata":{},"sourceType":"module"}